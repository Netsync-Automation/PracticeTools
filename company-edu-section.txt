            {activeTab === 'company-edu' && !isNonAdminPracticeUser && (
              <div className="space-y-8">
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-xl font-semibold text-gray-900">Company Education Settings</h2>
                    <p className="text-sm text-gray-600 mt-1">Configure educational tools and integrations</p>
                  </div>
                </div>

                {/* Webex Meetings Integration Section */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <div className="flex items-center gap-3 mb-6">
                    <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                      <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                    </div>
                    <div className="flex-1">
                      <h3 className="text-lg font-semibold text-gray-900">Webex Meetings Integration</h3>
                      <p className="text-sm text-gray-600">Configure Webex Meetings sites and recording hosts</p>
                    </div>
                    <label className="relative inline-flex items-center cursor-pointer">
                      <input
                        type="checkbox"
                        checked={webexMeetingsEnabled}
                        onChange={async (e) => {
                          const newEnabled = e.target.checked;
                          setWebexMeetingsEnabled(newEnabled);
                          
                          // Auto-save toggle change
                          console.log('🔧 [TOGGLE-SAVE] Webex Meetings toggle changed to:', newEnabled);
                          setSavingWebexMeetings(true);
                          try {
                            const response = await fetch('/api/settings/webex-meetings', {
                              method: 'POST',
                              headers: { 'Content-Type': 'application/json' },
                              body: JSON.stringify({
                                enabled: newEnabled,
                                sites: webexMeetingsSites
                              })
                            });
                            
                            if (response.ok) {
                              console.log('✅ [TOGGLE-SAVE] Toggle auto-saved successfully');
                            } else {
                              const errorData = await response.json();
                              alert('Failed to save toggle: ' + (errorData.error || 'Unknown error'));
                            }
                          } catch (error) {
                            console.error('🔧 [TOGGLE-SAVE] Error auto-saving toggle:', error);
                            alert('Error saving toggle');
                          } finally {
                            setSavingWebexMeetings(false);
                          }
                        }}
                        className="sr-only peer"
                      />
                      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                      <span className="ml-3 text-sm font-medium text-gray-700">
                        {webexMeetingsEnabled ? 'Enabled' : 'Disabled'}
                      </span>
                    </label>
                  </div>

                  {webexMeetingsEnabled && (
                    <div className="space-y-6">
                      {/* Site URLs List */}
                      <div>
                        <div className="flex items-center justify-between mb-4">
                          <h4 className="text-md font-semibold text-gray-900">Configured Sites</h4>
                          <button
                            onClick={() => {
                              setEditingSiteIndex(null);
                              setNewSite({
                                siteUrl: '',
                                accessToken: '',
                                refreshToken: '',
                                clientId: '',
                                clientSecret: '',
                                recordingHosts: ['']
                              });
                              setShowAddSite(true);
                            }}
                            className="btn-primary flex items-center gap-2 text-sm"
                          >
                            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                            </svg>
                            Add Site URL
                          </button>
                        </div>

                        {webexMeetingsSites.length === 0 ? (
                          <div className="text-center py-8 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300">
                            <svg className="w-8 h-8 mx-auto mb-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                            </svg>
                            <h4 className="text-sm font-medium text-gray-900 mb-1">No sites configured</h4>
                            <p className="text-sm text-gray-600">Add your first Webex Meetings site to get started</p>
                          </div>
                        ) : (
                          <div className="space-y-4">
                            {webexMeetingsSites.map((site, index) => (
                              <div key={index} className="border border-gray-200 rounded-lg p-4 bg-gray-50">
                                <div className="flex items-start justify-between">
                                  <div className="flex-1">
                                    <h5 className="font-medium text-gray-900 mb-2">{site.siteUrl}</h5>
                                    <div className="space-y-2">
                                      <div className="flex items-center gap-2">
                                        <span className="text-xs font-medium text-gray-600">Access Token:</span>
                                        <span className="text-xs text-gray-500 font-mono">••••••••</span>
                                      </div>
                                      <div className="flex items-center gap-2">
                                        <span className="text-xs font-medium text-gray-600">Refresh Token:</span>
                                        <span className="text-xs text-gray-500 font-mono">••••••••</span>
                                      </div>
                                      <div className="flex items-center gap-2">
                                        <span className="text-xs font-medium text-gray-600">Client ID:</span>
                                        <span className="text-xs text-gray-500 font-mono">••••••••</span>
                                      </div>
                                      <div className="flex items-center gap-2">
                                        <span className="text-xs font-medium text-gray-600">Client Secret:</span>
                                        <span className="text-xs text-gray-500 font-mono">••••••••</span>
                                      </div>
                                      <div>
                                        <span className="text-xs font-medium text-gray-600">Recording Hosts:</span>
                                        <div className="flex flex-wrap gap-1 mt-1">
                                          {site.recordingHosts.map((host, hostIndex) => {
                                            const hostEmail = typeof host === 'string' ? host : host?.email || '[object Object]';
                                            return (
                                              <span key={hostIndex} className="inline-flex px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded">
                                                {hostEmail}
                                              </span>
                                            );
                                          })}
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                  <div className="flex gap-2">
                                    <button
                                      onClick={() => {
                                        setEditingSiteIndex(index);
                                        setNewSite({
                                          siteUrl: site.siteUrl,
                                          accessToken: '',
                                          refreshToken: '',
                                          clientId: '',
                                          clientSecret: '',
                                          recordingHosts: site.recordingHosts.map(host => typeof host === 'string' ? host : host.email || '')
                                        });
                                        setShowAddSite(true);
                                      }}
                                      className="text-blue-600 hover:text-blue-800 hover:bg-blue-50 p-2 rounded"
                                      title="Edit Site"
                                    >
                                      <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                      </svg>
                                    </button>
                                    <button
                                      onClick={() => {
                                        const updatedSites = webexMeetingsSites.filter((_, i) => i !== index);
                                        setWebexMeetingsSites(updatedSites);
                                      }}
                                      className="text-red-600 hover:text-red-800 hover:bg-red-50 p-2 rounded"
                                      title="Remove Site"
                                    >
                                      <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                      </svg>
                                    </button>
                                  </div>
                                </div>
                              </div>
                            ))}
                          </div>
                        )}
                      </div>

                      {/* Management Buttons */}
                      <div className="pt-4 border-t border-gray-200 flex gap-3">
                        {webexMeetingsEnabled && webexMeetingsSites.length > 0 && (
                          <>
                            <button
                            onClick={() => {
                              console.log('🔧 [FRONTEND-WEBHOOK] Manage Webhooks button clicked');
                              console.log('🔧 [FRONTEND-WEBHOOK] Current state:', {
                                webexMeetingsEnabled,
                                sitesCount: webexMeetingsSites.length,
                                sites: webexMeetingsSites.map(s => ({ siteUrl: s.siteUrl, hasAccessToken: !!s.accessToken }))
                              });
                              setShowWebhookModal(true);
                            }}
                            className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center gap-2"
                          >
                            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                            Manage Webhooks
                          </button>
                          
                          <button
                            onClick={() => {
                              setShowApiManagementModal(true);
                            }}
                            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center gap-2"
                          >
                            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            Manage API
                          </button>
                          

                          </>
                        )}
                      </div>
                    </div>
                  )}
                </div>
              </div>
            )}




          </div>
        </div>
        
        {/* API Management Modal */}